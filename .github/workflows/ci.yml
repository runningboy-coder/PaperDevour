name: Python Application CI

# 定义工作流的触发条件
on:
  # 当有代码推送到 main 分支时触发
  push:
    branches: [ main, master ]
  # 当有 Pull Request 提交到 main 分支时触发
  pull_request:
    branches: [ main, master ]

jobs:
  # 定义一个名为 build 的任务
  build:
    # 指定运行环境为最新的 Ubuntu
    runs-on: ubuntu-latest

    steps:
      # 第一步：检出代码
      # 使用官方的 actions/checkout 动作来获取仓库代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 第二步：设置 Python 环境
      # 使用官方的 actions/setup-python 动作来配置 Python 3.9
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # 第三步：安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r requirements.txt
      
      # 第四步：使用 Flake8 进行代码规范检查
      # Flake8 会检查代码是否符合 PEP8 规范以及是否存在一些明显的逻辑错误
      - name: Lint with Flake8
        run: |
          # --count 会在检查后输出错误总数
          # --select=E9,F63,F7,F82 会忽略一些不重要的警告
          # --show-source 会显示有问题的代码行
          # --statistics 会打印出每个错误的统计次数
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      # 第五步（未来扩展）：运行测试
      # 目前我们还没有测试用例，这是一个占位符
      # 当您未来添加测试后，可以在这里取消注释并运行它们
      # - name: Run tests with Pytest
      #   run: |
      #     pytest